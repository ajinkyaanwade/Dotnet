/*1)Create Account class having instance member 
1. id- id should be generated by application, it is readonly property
2. name – write getter setter 
3. balance- Write getter setter 
It has deposit method who’s job is to increase the balance.
Declare static float Interestrate=0.07.
It has withdraw method who’s job is to reduce balance.
Declare conts float minbal=1000. When user withdraw money your application should ensure that minimum balance is maintain. 
Give appropriate validation like user can not deposit or withdraw 0 or negative. user can not open account with 0 amount
When you run your application at the beginning it should print name of bank and copy right detail.
It has static method which will calculate and return  interest amount for each account holder and increase the balance.
Write display method who’s job is to display Id name and balance and interest received.
If you are comfortable the exception try to use it and handle it also.*/
using System;
namespace Bank
{
    public class Account
    {
        int id;
        static int getid;
        string name;
        double balance;
        static float InterestRate = 0.07f;
        const float minbal = 1000;
        double interest;
        public int Id
        {
            get { return id; }
        }
        public string Name
        {
            get { return name; }
            set { name = value; }
        }
        public double Balance
        {
            get { return balance;  }
            set { balance = value; }
        }
        public double Interest
        {
            get { return interest; }
            set { interest = value; }
        }
        static Account()
        {
            Console.WriteLine("Bank of India");
        }
        public Account(string name,int balance)
        {
            Name = name;
            if(balance > 0)
            {
                Balance = balance;
            }
            else
            {
                throw new Exception("balance should be greater than 0");
            }
            this.id = ++getid;
        }
        public void deposit(int amt)
        {
            if (amt> 0)
                balance=balance+amt;
        }
        public void withdraw(int amt)
        {
            if((balance-amt)>1000)
            {
                balance=balance-amt;
            }
            else
            {
                throw new Exception("not sufficient blance");
            }
        }
        public static double payInt(Account obj)
        {
            obj.Interest = obj.balance * InterestRate;
            obj.balance = obj.balance + obj.Interest;
            return obj.Interest;
        }
        public void display()
        {
            Console.WriteLine("Name : {0} id : {1} balance : {2} interest  : {3}", name, id, balance, interest);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using Bank;
namespace BankDemo
{
    public class AccountDemo
    {
        public static void Main(String[] args)
        {
            Account a1 = null;
            Account a2 = null;
            try
            {
                a1 = new Account("Ajinkya", 100000);
            }
            catch(Exception e)
            {
                Console.WriteLine(e);
            }
            try
            {
                a2 = new Account("Sushil", 50000);
            }
            catch(Exception e)
            {
                Console.WriteLine(e);
            }
            try
            {
                a2.withdraw(20000);
            }
            catch(Exception ex)
            {
                Console.WriteLine(ex);
            }
            try
            {
                a1.withdraw(10000);
            }
            catch(Exception ex)
            {
                Console.WriteLine(ex);
            }
            a1.deposit(100000);
            a2.deposit(20000);
            Console.WriteLine("Account1 has interest = " + Account.payInt(a1));
            Console.WriteLine("Account2 has interest = " + Account.payInt(a2));
            a1.display();
            a2.display();
            //Console.WriteLine(Account.payInt(a1));
        }
    }
}
===========================================================
2)

using System.Security.Principal;

namespace taskcomplete
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Employee e1 = new Employee("Ajinkya", 49999);
            Employee e2 = new Employee("Sushil", 30000);
            Employee e3 = new Employee("Akshay", 20000);
            Employee e4 = null;
            try
            {
                e4 = new Employee("Shubham", 100000);
            }
            catch(Exception ex)
            {
                Console.WriteLine("=============================");
                Console.WriteLine(ex);
            }
            Console.WriteLine("==============================");
            Console.WriteLine("tax deducted of employee 1 is "+Employee.deductTDS(e1));
            Console.WriteLine("tax deducted of employee 2 is "+ Employee.deductTDS(e2));
            Console.WriteLine("tax deducted by employee 3 is "+Employee.deductTDS(e3));
            e1.display();
            e2.display();
            e3.display();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace taskcomplete
{
    internal class Employee
    {
        int id;
        static int getid = 1;
        string name;
        double salary;
        double netsalary;
        static float TDS = 0.10f;
        static Employee()
        {
            Console.WriteLine("Nice company");
        }
        public int  Id
        {
            get { return id; }
        }
        public string Name
        {
            set { name = value; }
            get { return name; }
        }
        public double Salary
        {
           set 
           {
                if(value>0 && value<50000)
                {
                    salary = value;
                }
                else
                {
                    throw new Exception("negative salary and salary greater than 50000 not allowed");
                }
           }
            get { return salary; }
        }
        public Employee(string name, double salary)
        {
            if (getid >3) { throw new Exception("Cant create object"); }
            else
            {
                id =getid++;
                Name = name;
                Salary = salary;
            }
            
        }
        public static double deductTDS(Employee emp) 
        {
            double tax = emp.salary * TDS;
            emp.netsalary = emp.salary - tax;
            return tax;
        }
        public void display()
        {
            Console.WriteLine("Id {0} Name {1} Netsalary {2}",id,name,netsalary);
        }
    }
}
===========================================================
3)

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    public  class Account
    {
        string name;
        double balance;
        public Account(string name, int balance)
        {
            this.name = name;
            this.balance = balance;
        }

        public string Name
        {
            get { return name; }
            set { name = value;}
        }
        public double Balance
        {
            get { return balance; }
            set {  balance = value;}
        }
    }
}

namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Account[] arr1 = new Account[3];
            arr1[0] = new Account("Ajinkya",100000);
            arr1[1] = new Account("sushil", 50000);
            arr1[2] = new Account("Akshay", 60000);
            foreach(Account a in arr1)
            {
                Console.WriteLine("name     "+a.Name+"      balance"+a.Balance);
            }
        }
    }
}
==========================================================================